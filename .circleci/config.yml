version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:lts

jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      # Restore cached dependencies if possible
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # Fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install dependencies
          command: npm install --save-dev
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths: .
  build:
    <<: *defaults  
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths: .
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Test
          command: npm run test:cover
          environment:
            JEST_JUNIT_OUTPUT: "coverage/junit-results.xml"
      - run:
          name: Upload test cover report to coveralls
          command: npm run coveralls 
      - store_test_results:
          path: coverage/
      - store_artifacts:
          path: coverage/
      - persist_to_workspace:
          root: .
          paths: .
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - checkout
      - build:
          requires:
            - checkout
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/